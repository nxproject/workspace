{"version":3,"file":"subtotal.js","sources":["subtotal.coffee"],"names":[],"mappings":"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","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n\ncallWithJQuery ($) ->\n\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\n        constructor: (input, opts) ->\n            super(input, opts)\n\n        processKey = (record, totals, keys, attrs, f) ->\n            key = []\n            addKey = false\n            for attr in attrs\n                if typeof record[attr] is \"string\"\n                    key.push record[attr] ? \"null\"\n                else\n                    nPos = 1\n                    aPos = attrs.indexOf attr\n                    for nAttr in record[attr]\n                        attrs.splice aPos+(nPos++), 0, nAttr\n                        key.push record[nAttr]\n                    if nPos > 1\n                        attrs.splice aPos, 1\n\n                flatKey = key.join(String.fromCharCode(0))\n                if not totals[flatKey]\n                    totals[flatKey] = f(key.slice())\n                    addKey = true\n                totals[flatKey].push record\n            if addKey\n                keys.push key\n            return [key, attrs]\n\n        processRecord: (record) -> #this code is called in a tight loop\n            rowKey = []\n            colKey = []\n            @allTotal.push record\n            [rowKey, @rowAttrs] = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\n                    return @aggregator(this, key, [])\n            [colKey, @colAttrs] = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\n                    return @aggregator(this, [], key)\n            m = rowKey.length-1\n            n = colKey.length-1\n            if m < 0 or n < 0\n                return\n            for i in [0..m]\n                fRowKey = rowKey.slice(0, i+1)\n                flatRowKey = fRowKey.join(String.fromCharCode(0))\n                if not @tree[flatRowKey]\n                    @tree[flatRowKey] = {}\n                for j in [0..n]\n                    fColKey = colKey.slice(0, j+1)\n                    flatColKey = fColKey.join(String.fromCharCode(0))\n                    if not @tree[flatRowKey][flatColKey]\n                        @tree[flatRowKey][flatColKey] = @aggregator(this, fRowKey, fColKey)\n                    @tree[flatRowKey][flatColKey].push record\n\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\n\n    SubtotalRenderer = (pivotData, opts) ->\n        defaults =\n            localeStrings:\n                totals: \"Totals\"\n\n        opts = $.extend defaults, opts\n\n        arrowCollapsed = \"\\u25B6\"\n        arrowExpanded = \"\\u25E2\"\n        colAttrs = pivotData.colAttrs\n        rowAttrs = pivotData.rowAttrs\n        rowKeys = pivotData.getRowKeys()\n        colKeys = pivotData.getColKeys()\n        tree = pivotData.tree\n        rowTotals = pivotData.rowTotals\n        colTotals = pivotData.colTotals\n        allTotal =pivotData.allTotal\n\n        createCell = (cellType, className, textContent, attributes) ->\n            th = document.createElement(cellType)\n            if className then th.className = className\n            if textContent isnt null and textContent isnt undefined then th.textContent = textContent\n            if attributes then th.setAttribute(attr, val) for own attr, val of attributes\n            return th\n\n        processKeys = (keysArr, className) ->\n            lastRow = keysArr.length - 1\n            lastCol = keysArr[0].length - 1\n            rMark = []\n            headers = []\n            th = createCell(\"th\", className, keysArr[0][0])\n            flatKey = keysArr[0][0]\n            nodePos = 0\n            node = {\"node\": nodePos, \"row\": 0, \"col\": 0, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": lastCol, \"leaves\": 1, \"flatKey\": flatKey}\n            headers[0] = node\n            rMark[0] = node\n            c = 1\n            while c <= lastCol\n                th = createCell(\"th\", className, keysArr[0][c])\n                flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c]\n                ++nodePos\n                node =  {\"node\": nodePos, \"row\": 0, \"col\": c, \"th\": th, \"parent\": rMark[c-1], \"children\": [], \"descendants\": lastCol-c, \"leaves\": 1, \"flatKey\": flatKey}\n                rMark[c] = node\n                rMark[c-1].children.push(node)\n                ++c\n            rMark[lastCol].leaves = 0\n            r = 1\n            while r <= lastRow\n                repeats = true\n                flatKey = \"\"\n                c = 0\n                while c <= lastCol\n                    flatKey = if c is 0 then keysArr[r][c] else flatKey + String.fromCharCode(0) + keysArr[r][c]\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\n                        repeats = true\n                        ++c\n                        continue\n                    th = createCell(\"th\", className, keysArr[r][c])\n                    ++nodePos\n                    header = {\"node\": nodePos, \"row\": r, \"col\": c, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": 0, \"leaves\": 1, \"flatKey\": flatKey}\n                    if c is 0\n                        headers.push header\n                    else\n                        header.parent = rMark[c-1]\n                        rMark[c-1].children.push header\n                        x = 0\n                        while x <= c-1\n                            rMark[x].descendants = rMark[x].descendants + 1\n                            ++x\n                    rMark[c] = header\n                    repeats = false\n                    ++c\n                c = 0\n                while c <= lastCol\n                    rMark[c].leaves = rMark[c].leaves + 1\n                    ++c\n                rMark[lastCol].leaves = 0\n                ++r\n            return headers\n\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\n            colAttr = colAttrs[col]\n            th = createCell(\"th\", \"pvtAxisLabel\", colAttr)\n            textContent = colAttr\n            if col < colAttrs.length-1\n                textContent = \" \" + arrowExpanded + \" \" + colAttr\n            th = createCell(\"th\", \"pvtAxisLabel\", textContent)\n            th.setAttribute(\"data-colAttr\", colAttr)\n            tr.appendChild th\n            colHeaderHeaders.push({\"tr\": tr, \"th\": th, \"clickStatus\": \"expanded\", \"expandedCount\": 0, \"nHeaders\": 0})\n            thead.appendChild tr\n\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\n            tr = document.createElement(\"tr\")\n            if rowAttrs.length != 0\n                tr.appendChild createCell(\"th\", null, null, {\"colspan\": rowAttrs.length, \"rowspan\": colAttrs.length});\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\n            for c in [1..colAttrs.length] when c < colAttrs.length\n                tr = document.createElement(\"tr\")\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\n\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\n            for i in [0..colAttrs.length-1] when i < colAttrs.length-1\n                th = colHeaderHeaders[i].th\n                colAttr = colAttrs[i]\n                th.onclick = (event) ->\n                    event = event || window.event\n                    toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\")\n\n        buildColHeaders = (colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\n            # DF Recurse\n            for h in colHeader.children\n                buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs)\n            # Process\n            hh = colHeaderHeaders[colHeader.col]\n            ++hh.expandedCount\n            ++hh.nHeaders\n            tr = hh.tr\n            th = colHeader.th\n            th.setAttribute(\"data-colHeader\", th.textContent)\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\n                th.setAttribute(\"rowspan\", 2)\n            if colHeader.children.length !=0\n                th.setAttribute(\"colspan\", colHeader.descendants+1)\n            th.setAttribute(\"data-node\", colHeaderCols.length)\n            tr.appendChild(th)\n            if colHeader.children.length !=0\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\n                th.onclick = (event) ->\n                    event = event || window.event\n                    toggleCol(colHeaderHeaders, colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")))\n                rowspan = colAttrs.length-(colHeader.col+1) + if rowAttrs.length != 0 then 1 else 0\n                style = \"pvtColLabel col\" + colHeader.row\n                th = createCell(\"th\", style, '', {\"rowspan\": rowspan})\n                colHeader.children[0].tr.appendChild(th)\n                colHeader.sTh = th\n            colHeader.clickStatus = \"expanded\"\n            colHeader.tr = tr\n            colHeaderCols.push(colHeader)\n\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\n            tr = document.createElement(\"tr\")\n            rowHeaderHeaders.hh = []\n            for own i, rowAttr of rowAttrs\n                textContent = rowAttr\n                if i < rowAttrs.length-1\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr\n                th = createCell(\"th\", \"pvtAxisLabel\", textContent)\n                th.setAttribute(\"data-rowAttr\", rowAttr)\n                tr.appendChild th\n                rowHeaderHeaders.hh.push({\"th\": th, \"clickStatus\": \"expanded\", \"expandedCount\": 0, \"nHeaders\": 0})\n            if colAttrs.length != 0\n                th = createCell(\"th\")\n                tr.appendChild th\n            thead.appendChild tr\n            rowHeaderHeaders.tr = tr\n\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\n            for i in [0..rowAttrs.length-1] when i < rowAttrs.length-1\n                th = rowHeaderHeaders.hh[i]\n                rowAttr = rowAttrs[i]\n                th.th.onclick = (event) ->\n                    event = event || window.event\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\")\n\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\n            rowspan = 1\n            if colAttrs.length != 0\n                rowspan = colAttrs.length + (if rowAttrs.length ==0 then 0 else 1)\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"rowspan\": rowspan})\n            tr.appendChild th\n\n        buildRowHeaders = (tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) ->\n            hh = rowHeaderHeaders.hh[rowHeader.col]\n            ++hh.expandedCount\n            ++hh.nHeaders\n            tr = document.createElement(\"tr\")\n            th = rowHeader.th\n            th.setAttribute(\"rowspan\", rowHeader.descendants+1)\n            th.setAttribute(\"data-rowHeader\", th.textContent)\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\n                th.setAttribute(\"colspan\", 2)\n            th.setAttribute(\"data-node\", rowHeaderRows.length)\n            tr.appendChild(th)\n            if rowHeader.children.length != 0\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\n                th.onclick = (event) ->\n                    event = event || window.event\n                    toggleRow(rowHeaderHeaders, rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")))\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\n                th = createCell(\"th\", \"pvtRowLabel\", '', {\"colspan\": colspan})\n                tr.appendChild(th)\n            rowHeader.clickStatus = \"expanded\"\n            rowHeader.tr = tr\n            rowHeaderRows.push(rowHeader)\n            tbody.appendChild(tr)\n            for h in rowHeader.children\n                buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs)\n\n        buildValues = (rowHeaderRows, colHeaderCols) ->\n            for rowHeader in rowHeaderRows\n                tr = rowHeader.tr\n                flatRowKey = rowHeader.flatKey\n                for colHeader in colHeaderCols\n                    flatColKey = colHeader.flatKey\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\n                    val = aggregator.value()\n                    style = \"pvtVal\"\n                    style = if (colHeader.children.length != 0) then  style +  \" pvtColSubtotal\" else style\n                    style = if (rowHeader.children.length != 0) then  style +  \" pvtRowSubtotal\" else style\n                    style = style + \" row\"+rowHeader.row+\" col\"+colHeader.row+\" rowcol\"+rowHeader.col+\" colcol\"+colHeader.col\n                    td = createCell(\"td\", style, aggregator.format(val), {\"data-value\": val})\n                    tr.appendChild td\n                # buildRowTotal\n                totalAggregator = rowTotals[flatRowKey]\n                val = totalAggregator.value()\n                style = \"pvtTotal rowTotal\"\n                style = if (rowHeader.children.length != 0) then  style +  \" pvtRowSubtotal\" else style\n                style = style + \" row\"+rowHeader.row+\" rowcol\"+rowHeader.col\n                td = createCell(\"td\", style, totalAggregator.format(val), {\"data-value\": val, \"data-row\": \"row\"+rowHeader.row, \"data-col\": \"col\"+rowHeader.col})\n                tr.appendChild td\n\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\n            tr = document.createElement(\"tr\")\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"colspan\": colspan})\n            tr.appendChild(th)\n            return tr\n\n        buildColTotals = (tr, colHeaderCols) ->\n            for h in colHeaderCols\n                totalAggregator = colTotals[h.flatKey]\n                val = totalAggregator.value()\n                style = \"pvtVal pvtTotal colTotal\"\n                style = if h.children.length then style + \" pvtColSubtotal\" else style\n                style = style + \" col\"+h.row+\" colcol\"+h.col\n                td = createCell(\"td\", style, totalAggregator.format(val), {\"data-value\": val, \"data-for\": \"col\"+h.col})\n                tr.appendChild td\n\n        buildGrandTotal = (result, tr) ->\n            totalAggregator = allTotal\n            val = totalAggregator.value()\n            td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\"data-value\": val})\n            tr.appendChild td\n            result.appendChild tr\n\n        setColVisibility = (visibility, h) ->\n            h.th.style.display = visibility\n            if h.children.length\n                $(h.th).closest('table.pvtTable').find('tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col).css('display', visibility)\n            else\n                $(h.th).closest('table.pvtTable').find('tbody tr td.pvtVal.col' + h.row).not('.pvtColSubtotal').css('display', visibility)\n            if h.sTh\n                h.sTh.style.display = visibility\n\n        collapseCol = (colHeaderHeaders, colHeaderCols, c) ->\n            if not colHeaderCols[c]\n                return\n            h = colHeaderCols[c]\n            if h.clickStatus is \"collapsed\"\n                return\n            colspan = 0\n            for i in [1..h.descendants] when h.descendants != 0\n                d = colHeaderCols[c-i]\n                if d.th.style.display isnt \"none\"\n                    ++colspan\n                    setColVisibility \"none\", d\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\"))-colspan)\n                p = p.parent\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\")\n            h.clickStatus = \"collapsed\"\n            h.th.setAttribute(\"colspan\", 1)\n            h.th.style.display = \"\"\n            colHeaderHeader = colHeaderHeaders[h.col]\n            colHeaderHeader.expandedCount--\n            if colHeaderHeader.expandedCount == 0\n                for i in [h.col..colHeaderHeaders.length-2]\n                    colHeaderHeader = colHeaderHeaders[i]\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute(\"data-colAttr\")\n                    colHeaderHeader.clickStatus = \"collapsed\"\n\n        expandChildCol = (ch) ->\n            if ch.th.style.display is \"none\"\n                setColVisibility \"\", ch\n            if ch.clickStatus isnt \"collapsed\"\n                for gch in ch.children\n                    expandChildCol gch\n\n        expandCol = (colHeaderHeaders, colHeaderCols, c) ->\n            if not colHeaderCols[c]\n                return\n            h = colHeaderCols[c]\n            if h.clickStatus is \"expanded\"\n                return\n            colspan = 0\n            for ch in h.children\n                colspan = colspan + ch.th.colSpan\n                if ch.th.style.display is \"none\"\n                    setColVisibility \"\", ch\n                expandChildCol ch\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\")\n            h.th.setAttribute(\"colspan\", colspan+1)\n            h.clickStatus = \"expanded\"\n            h.th.style.display = \"\"\n            if h.sTh\n                h.sTh.style.display = \"\"\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"colspan\", (colspan + parseInt(p.th.getAttribute(\"colspan\"))))\n                p = p.parent\n            hh = colHeaderHeaders[h.col]\n            ++hh.expandedCount\n            if hh.expandedCount == hh.nHeaders\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-colAttr\")\n                hh.clickStatus = \"expanded\"\n\n        collapseRow = (rowHeaderHeaders, rowHeaderRows, r) ->\n            if not rowHeaderRows[r]\n                return\n            h = rowHeaderRows[r]\n            if h.clickStatus is \"collapsed\"\n                return\n            rowspan = 0\n            for i in [1..h.descendants] when h.descendants != 0\n                d = rowHeaderRows[r+i]\n                if d.tr.style.display isnt \"none\"\n                    ++rowspan\n                    d.tr.style.display = \"none\"\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\"))-rowspan)\n                p = p.parent\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\")\n            h.clickStatus = \"collapsed\"\n            h.th.setAttribute(\"rowspan\", 1)\n            h.tr.style.display = \"\"\n            rowHeaderHeader = rowHeaderHeaders.hh[h.col]\n            rowHeaderHeader.expandedCount--\n            if rowHeaderHeader.expandedCount == 0\n                for j in [h.col..rowHeaderHeaders.hh.length-2]\n                    rowHeaderHeader = rowHeaderHeaders.hh[j]\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute(\"data-rowAttr\")\n                    rowHeaderHeader.clickStatus = \"collapsed\"\n\n        expandChildRow = (ch) ->\n            if ch.tr.style.display is \"none\"\n                ch.tr.style.display = \"\"\n            if ch.clickStatus isnt \"collapsed\"\n                for gch in ch.children\n                    expandChildRow gch\n\n        expandRow = (rowHeaderHeaders, rowHeaderRows, r) ->\n            if not rowHeaderRows[r]\n                return\n            h = rowHeaderRows[r]\n            if h.clickStatus is \"expanded\"\n                return\n            rowspan = 0\n            for ch in h.children\n                rowspan = rowspan + ch.th.rowSpan\n                if ch.tr.style.display is \"none\"\n                    ch.tr.style.display = \"\"\n                expandChildRow ch\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\")\n            h.th.setAttribute(\"rowspan\", rowspan+1)\n            h.clickStatus = \"expanded\"\n            h.tr.style.display = \"\"\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"rowspan\", (rowspan + parseInt(p.th.getAttribute(\"rowspan\"))))\n                p = p.parent\n            hh = rowHeaderHeaders.hh[h.col]\n            ++hh.expandedCount\n            if hh.expandedCount == hh.nHeaders\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-rowAttr\")\n                hh.clickStatus = \"expanded\"\n\n        toggleCol = (colHeaderHeaders, colHeaderCols, c) ->\n            if not colHeaderCols[c]\n                return\n            h = colHeaderCols[c]\n            if h.clickStatus is \"collapsed\"\n                expandCol(colHeaderHeaders, colHeaderCols, c)\n            else\n                collapseCol(colHeaderHeaders, colHeaderCols, c)\n            h.th.scrollIntoView\n\n        toggleRow = (rowHeaderHeaders, rowHeaderRows, r) ->\n            if not rowHeaderRows[r]\n                return\n            if rowHeaderRows[r].clickStatus is \"collapsed\"\n                expandRow(rowHeaderHeaders, rowHeaderRows, r)\n            else\n                collapseRow(rowHeaderHeaders, rowHeaderRows, r)\n\n        collapseColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\n            if typeof colAttr is 'string'\n                idx = colAttrs.indexOf(colAttr)\n            else\n                idx = colAttr\n            console.log \"idx = \" + idx\n            if idx < 0 or idx == colAttrs.length-1\n                return\n            i = idx\n            nAttrs = colAttrs.length-1\n            while i < nAttrs\n                hh = colHeaderHeaders[i]\n                hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i]\n                hh.clickStatus = \"collapsed\"\n                ++i\n            i = 0\n            nCols = colHeaderCols.length\n            while i < nCols\n                h = colHeaderCols[i]\n                if h.col is idx and h.clickStatus isnt \"collapsed\" and h.th.style.display isnt \"none\"\n                    collapseCol(colHeaderHeaders, colHeaderCols, parseInt(h.th.getAttribute(\"data-node\")))\n                ++i\n\n        expandColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\n            if typeof colAttr is 'string'\n                idx = colAttrs.indexOf(colAttr)\n            else\n                idx = colAttr\n            if idx < 0 or idx == colAttrs.length-1\n                return\n            for i in [0..idx]\n                hh = colHeaderHeaders[i]\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i]\n                hh.clickStatus = \"expanded\"\n                j = 0\n                nCols = colHeaderCols.length\n                while j < nCols\n                    h = colHeaderCols[j]\n                    if h.col == i\n                        expandCol(colHeaderHeaders, colHeaderCols, j)\n                    ++j\n            ++idx\n            while idx < colAttrs.length-1\n                colHeaderHeader = colHeaderHeaders[idx]\n                if colHeaderHeader.expandedCount == 0\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx]\n                    colHeaderHeader.clickStatus = \"collapsed\"\n                else if colHeaderHeader.expandedCount == colHeaderHeader.nHeaders\n                    colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx]\n                    colHeaderHeader.clickStatus = \"expanded\"\n                ++idx\n\n        collapseRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\n            if typeof rowAttr is 'string'\n                idx = rowAttrs.indexOf(rowAttr)\n            else\n                idx = rowAttr\n            if idx < 0 or idx == rowAttrs.length-1\n                return\n            i = idx\n            nAttrs = rowAttrs.length-1\n            while i < nAttrs\n                h = rowHeaderHeaders.hh[i]\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i]\n                h.clickStatus = \"collapsed\"\n                ++i\n            j = 0\n            nRows = rowHeaderRows.length\n            while j < nRows\n                h = rowHeaderRows[j]\n                if h.col is idx and h.clickStatus isnt \"collapsed\" and h.tr.style.display isnt \"none\"\n                    collapseRow(rowHeaderHeaders, rowHeaderRows, j)\n                    j = j + h.descendants + 1\n                else\n                    ++j\n\n        expandRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\n            if typeof rowAttr is 'string'\n                idx = rowAttrs.indexOf(rowAttr)\n            else\n                idx = rowAttr\n            if idx < 0 or idx == rowAttrs.length-1\n                return\n            for i in [0..idx]\n                hh = rowHeaderHeaders.hh[i]\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i]\n                hh.clickStatus = \"expanded\"\n                j = 0\n                nRows = rowHeaderRows.length\n                while j < nRows\n                    h = rowHeaderRows[j]\n                    if h.col == i\n                        expandRow(rowHeaderHeaders, rowHeaderRows, j)\n                        j = j + h.descendants + 1\n                    else\n                        ++j\n            ++idx\n            while idx < rowAttrs.length-1\n                rowHeaderHeader = rowHeaderHeaders.hh[idx]\n                if rowHeaderHeader.expandedCount == 0\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx]\n                    rowHeaderHeader.clickStatus = \"collapsed\"\n                else if rowHeaderHeader.expandedCount == rowHeaderHeader.nHeaders\n                    rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx]\n                    rowHeaderHeader.clickStatus = \"expanded\"\n                ++idx\n\n        toggleColHeaderHeader = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\n            idx = colAttrs.indexOf(colAttr)\n            h = colHeaderHeaders[idx]\n            if h.clickStatus is \"collapsed\"\n                expandColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\n            else\n                collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\n\n\n        toggleRowHeaderHeader = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\n            idx = rowAttrs.indexOf(rowAttr)\n            th = rowHeaderHeaders.hh[idx]\n            if th.clickStatus is \"collapsed\"\n                expandRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\n            else\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\n\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\n            rowHeaders = []\n            colHeaders = []\n            rowHeaderHeaders = {}\n            rowHeaderRows = []\n            colHeaderHeaders = []\n            colHeaderCols = []\n\n            if rowAttrs.length != 0\n                rowHeaders = processKeys(rowKeys, \"pvtRowLabel\")\n            if colAttrs.length != 0\n                colHeaders = processKeys(colKeys, \"pvtColLabel\")\n            result = document.createElement(\"table\")\n            result.className = \"pvtTable\"\n            result.style.display = \"none\"\n            thead = document.createElement(\"thead\")\n            result.appendChild thead\n            if colAttrs.length != 0\n                buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs)\n                for h in colHeaders\n                   buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\n            if rowAttrs.length != 0\n                buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs)\n                if colAttrs.length == 0\n                    buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs)\n            if colAttrs.length != 0\n                buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs)\n            tbody = document.createElement(\"tbody\")\n            result.appendChild tbody\n            if rowAttrs.length != 0\n                for h in rowHeaders\n                    buildRowHeaders tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs\n                buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\n            buildValues(rowHeaderRows, colHeaderCols)\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\n            if colAttrs.length != 0\n                buildColTotals(tr, colHeaderCols)\n            buildGrandTotal(tbody, tr)\n            result.setAttribute(\"data-numrows\", rowKeys.length)\n            result.setAttribute(\"data-numcols\", colKeys.length)\n            if not opts.collapseRowsAt? and not opts.collapseColsAt?\n                result.style.display = \"\"\n            if opts.collapseRowsAt?\n                setTimeout (->\n                    collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt\n                    if not opts.collapseColsAt\n                        result.style.display = \"\"\n                ), 0\n            if opts.collapseColsAt?\n                setTimeout (->\n                    collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt\n                    result.style.display = \"\"\n                ), 0\n            return result\n\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\n\n    $.pivotUtilities.subtotal_renderers =\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"heatmap\", opts)\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\", opts)\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\", opts)\n"]}