{"version":3,"sources":["subtotal.coffee","subtotal.min.js"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","superClass","input","opts","processKey","record","totals","keys","attrs","f","aPos","addKey","attr","flatKey","k","l","len","len1","nAttr","nPos","ref","ref1","length","push","indexOf","splice","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","ref2","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","ref3","results1","pivotUtilities","PivotData","pivotData","arrowCollapsed","arrowExpanded","buildColHeaderHeader","buildColHeaderHeaders","buildColHeaderHeadersClickEvents","buildColHeaders","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowHeaderHeaders","buildRowHeaderHeadersClickEvents","buildRowHeaders","buildRowTotalsHeader","buildValues","collapseCol","collapseColsAt","collapseRow","collapseRowsAt","createCell","defaults","expandChildCol","expandChildRow","expandCol","expandColsAt","expandRow","expandRowsAt","main","processKeys","setColVisibility","toggleCol","toggleColHeaderHeader","toggleRow","toggleRowHeaderHeader","localeStrings","getRowKeys","getColKeys","cellType","className","textContent","attributes","th","val","document","createElement","setAttribute","keysArr","c","header","headers","lastCol","lastRow","node","nodePos","r","rMark","repeats","x","row","col","children","descendants","leaves","thead","colHeaderHeaders","tr","colAttr","appendChild","clickStatus","expandedCount","nHeaders","colspan","rowspan","colHeaderCols","onclick","event","window","target","getAttribute","colHeader","h","hh","style","parseInt","sTh","rowHeaderHeaders","rowAttr","rowHeaderRows","tbody","rowHeader","td","totalAggregator","value","format","data-value","data-row","data-col","data-for","result","visibility","display","closest","find","css","not","colHeaderHeader","d","p","ch","gch","colSpan","rowHeaderHeader","rowSpan","scrollIntoView","idx","nAttrs","nCols","console","log","nRows","colHeaders","rowHeaders","setTimeout","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n\ncallWithJQuery ($) ->\n\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\n        constructor: (input, opts) ->\n            super(input, opts)\n\n        processKey = (record, totals, keys, attrs, f) ->\n            key = []\n            addKey = false\n            for attr in attrs\n                if typeof record[attr] is \"string\"\n                    key.push record[attr] ? \"null\"\n                else\n                    nPos = 1\n                    aPos = attrs.indexOf attr\n                    for nAttr in record[attr]\n                        attrs.splice aPos+(nPos++), 0, nAttr\n                        key.push record[nAttr]\n                    if nPos > 1\n                        attrs.splice aPos, 1\n\n                flatKey = key.join(String.fromCharCode(0))\n                if not totals[flatKey]\n                    totals[flatKey] = f(key.slice())\n                    addKey = true\n                totals[flatKey].push record\n            if addKey\n                keys.push key\n            return [key, attrs]\n\n        processRecord: (record) -> #this code is called in a tight loop\n            rowKey = []\n            colKey = []\n            @allTotal.push record\n            [rowKey, @rowAttrs] = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\n                    return @aggregator(this, key, [])\n            [colKey, @colAttrs] = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\n                    return @aggregator(this, [], key)\n            m = rowKey.length-1\n            n = colKey.length-1\n            if m < 0 or n < 0\n                return\n            for i in [0..m]\n                fRowKey = rowKey.slice(0, i+1)\n                flatRowKey = fRowKey.join(String.fromCharCode(0))\n                if not @tree[flatRowKey]\n                    @tree[flatRowKey] = {}\n                for j in [0..n]\n                    fColKey = colKey.slice(0, j+1)\n                    flatColKey = fColKey.join(String.fromCharCode(0))\n                    if not @tree[flatRowKey][flatColKey]\n                        @tree[flatRowKey][flatColKey] = @aggregator(this, fRowKey, fColKey)\n                    @tree[flatRowKey][flatColKey].push record\n\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\n\n    SubtotalRenderer = (pivotData, opts) ->\n        defaults =\n            localeStrings:\n                totals: \"Totals\"\n\n        opts = $.extend defaults, opts\n\n        arrowCollapsed = \"\\u25B6\"\n        arrowExpanded = \"\\u25E2\"\n        colAttrs = pivotData.colAttrs\n        rowAttrs = pivotData.rowAttrs\n        rowKeys = pivotData.getRowKeys()\n        colKeys = pivotData.getColKeys()\n        tree = pivotData.tree\n        rowTotals = pivotData.rowTotals\n        colTotals = pivotData.colTotals\n        allTotal =pivotData.allTotal\n\n        createCell = (cellType, className, textContent, attributes) ->\n            th = document.createElement(cellType)\n            if className then th.className = className\n            if textContent isnt null and textContent isnt undefined then th.textContent = textContent\n            if attributes then th.setAttribute(attr, val) for own attr, val of attributes\n            return th\n\n        processKeys = (keysArr, className) ->\n            lastRow = keysArr.length - 1\n            lastCol = keysArr[0].length - 1\n            rMark = []\n            headers = []\n            th = createCell(\"th\", className, keysArr[0][0])\n            flatKey = keysArr[0][0]\n            nodePos = 0\n            node = {\"node\": nodePos, \"row\": 0, \"col\": 0, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": lastCol, \"leaves\": 1, \"flatKey\": flatKey}\n            headers[0] = node\n            rMark[0] = node\n            c = 1\n            while c <= lastCol\n                th = createCell(\"th\", className, keysArr[0][c])\n                flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c]\n                ++nodePos\n                node =  {\"node\": nodePos, \"row\": 0, \"col\": c, \"th\": th, \"parent\": rMark[c-1], \"children\": [], \"descendants\": lastCol-c, \"leaves\": 1, \"flatKey\": flatKey}\n                rMark[c] = node\n                rMark[c-1].children.push(node)\n                ++c\n            rMark[lastCol].leaves = 0\n            r = 1\n            while r <= lastRow\n                repeats = true\n                flatKey = \"\"\n                c = 0\n                while c <= lastCol\n                    flatKey = if c is 0 then keysArr[r][c] else flatKey + String.fromCharCode(0) + keysArr[r][c]\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\n                        repeats = true\n                        ++c\n                        continue\n                    th = createCell(\"th\", className, keysArr[r][c])\n                    ++nodePos\n                    header = {\"node\": nodePos, \"row\": r, \"col\": c, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": 0, \"leaves\": 1, \"flatKey\": flatKey}\n                    if c is 0\n                        headers.push header\n                    else\n                        header.parent = rMark[c-1]\n                        rMark[c-1].children.push header\n                        x = 0\n                        while x <= c-1\n                            rMark[x].descendants = rMark[x].descendants + 1\n                            ++x\n                    rMark[c] = header\n                    repeats = false\n                    ++c\n                c = 0\n                while c <= lastCol\n                    rMark[c].leaves = rMark[c].leaves + 1\n                    ++c\n                rMark[lastCol].leaves = 0\n                ++r\n            return headers\n\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\n            colAttr = colAttrs[col]\n            th = createCell(\"th\", \"pvtAxisLabel\", colAttr)\n            textContent = colAttr\n            if col < colAttrs.length-1\n                textContent = \" \" + arrowExpanded + \" \" + colAttr\n            th = createCell(\"th\", \"pvtAxisLabel\", textContent)\n            th.setAttribute(\"data-colAttr\", colAttr)\n            tr.appendChild th\n            colHeaderHeaders.push({\"tr\": tr, \"th\": th, \"clickStatus\": \"expanded\", \"expandedCount\": 0, \"nHeaders\": 0})\n            thead.appendChild tr\n\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\n            tr = document.createElement(\"tr\")\n            if rowAttrs.length != 0\n                tr.appendChild createCell(\"th\", null, null, {\"colspan\": rowAttrs.length, \"rowspan\": colAttrs.length});\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\n            for c in [1..colAttrs.length] when c < colAttrs.length\n                tr = document.createElement(\"tr\")\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\n\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\n            for i in [0..colAttrs.length-1] when i < colAttrs.length-1\n                th = colHeaderHeaders[i].th\n                colAttr = colAttrs[i]\n                th.onclick = (event) ->\n                    event = event || window.event\n                    toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\")\n\n        buildColHeaders = (colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\n            # DF Recurse\n            for h in colHeader.children\n                buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs)\n            # Process\n            hh = colHeaderHeaders[colHeader.col]\n            ++hh.expandedCount\n            ++hh.nHeaders\n            tr = hh.tr\n            th = colHeader.th\n            th.setAttribute(\"data-colHeader\", th.textContent)\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\n                th.setAttribute(\"rowspan\", 2)\n            if colHeader.children.length !=0\n                th.setAttribute(\"colspan\", colHeader.descendants+1)\n            th.setAttribute(\"data-node\", colHeaderCols.length)\n            tr.appendChild(th)\n            if colHeader.children.length !=0\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\n                th.onclick = (event) ->\n                    event = event || window.event\n                    toggleCol(colHeaderHeaders, colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")))\n                rowspan = colAttrs.length-(colHeader.col+1) + if rowAttrs.length != 0 then 1 else 0\n                style = \"pvtColLabel col\" + colHeader.row\n                th = createCell(\"th\", style, '', {\"rowspan\": rowspan})\n                colHeader.children[0].tr.appendChild(th)\n                colHeader.sTh = th\n            colHeader.clickStatus = \"expanded\"\n            colHeader.tr = tr\n            colHeaderCols.push(colHeader)\n\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\n            tr = document.createElement(\"tr\")\n            rowHeaderHeaders.hh = []\n            for own i, rowAttr of rowAttrs\n                textContent = rowAttr\n                if i < rowAttrs.length-1\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr\n                th = createCell(\"th\", \"pvtAxisLabel\", textContent)\n                th.setAttribute(\"data-rowAttr\", rowAttr)\n                tr.appendChild th\n                rowHeaderHeaders.hh.push({\"th\": th, \"clickStatus\": \"expanded\", \"expandedCount\": 0, \"nHeaders\": 0})\n            if colAttrs.length != 0\n                th = createCell(\"th\")\n                tr.appendChild th\n            thead.appendChild tr\n            rowHeaderHeaders.tr = tr\n\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\n            for i in [0..rowAttrs.length-1] when i < rowAttrs.length-1\n                th = rowHeaderHeaders.hh[i]\n                rowAttr = rowAttrs[i]\n                th.th.onclick = (event) ->\n                    event = event || window.event\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\")\n\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\n            rowspan = 1\n            if colAttrs.length != 0\n                rowspan = colAttrs.length + (if rowAttrs.length ==0 then 0 else 1)\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"rowspan\": rowspan})\n            tr.appendChild th\n\n        buildRowHeaders = (tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) ->\n            hh = rowHeaderHeaders.hh[rowHeader.col]\n            ++hh.expandedCount\n            ++hh.nHeaders\n            tr = document.createElement(\"tr\")\n            th = rowHeader.th\n            th.setAttribute(\"rowspan\", rowHeader.descendants+1)\n            th.setAttribute(\"data-rowHeader\", th.textContent)\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\n                th.setAttribute(\"colspan\", 2)\n            th.setAttribute(\"data-node\", rowHeaderRows.length)\n            tr.appendChild(th)\n            if rowHeader.children.length != 0\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\n                th.onclick = (event) ->\n                    event = event || window.event\n                    toggleRow(rowHeaderHeaders, rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")))\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\n                th = createCell(\"th\", \"pvtRowLabel\", '', {\"colspan\": colspan})\n                tr.appendChild(th)\n            rowHeader.clickStatus = \"expanded\"\n            rowHeader.tr = tr\n            rowHeaderRows.push(rowHeader)\n            tbody.appendChild(tr)\n            for h in rowHeader.children\n                buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs)\n\n        buildValues = (rowHeaderRows, colHeaderCols) ->\n            for rowHeader in rowHeaderRows\n                tr = rowHeader.tr\n                flatRowKey = rowHeader.flatKey\n                for colHeader in colHeaderCols\n                    flatColKey = colHeader.flatKey\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\n                    val = aggregator.value()\n                    style = \"pvtVal\"\n                    style = if (colHeader.children.length != 0) then  style +  \" pvtColSubtotal\" else style\n                    style = if (rowHeader.children.length != 0) then  style +  \" pvtRowSubtotal\" else style\n                    style = style + \" row\"+rowHeader.row+\" col\"+colHeader.row+\" rowcol\"+rowHeader.col+\" colcol\"+colHeader.col\n                    td = createCell(\"td\", style, aggregator.format(val), {\"data-value\": val})\n                    tr.appendChild td\n                # buildRowTotal\n                totalAggregator = rowTotals[flatRowKey]\n                val = totalAggregator.value()\n                style = \"pvtTotal rowTotal\"\n                style = if (rowHeader.children.length != 0) then  style +  \" pvtRowSubtotal\" else style\n                style = style + \" row\"+rowHeader.row+\" rowcol\"+rowHeader.col\n                td = createCell(\"td\", style, totalAggregator.format(val), {\"data-value\": val, \"data-row\": \"row\"+rowHeader.row, \"data-col\": \"col\"+rowHeader.col})\n                tr.appendChild td\n\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\n            tr = document.createElement(\"tr\")\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"colspan\": colspan})\n            tr.appendChild(th)\n            return tr\n\n        buildColTotals = (tr, colHeaderCols) ->\n            for h in colHeaderCols\n                totalAggregator = colTotals[h.flatKey]\n                val = totalAggregator.value()\n                style = \"pvtVal pvtTotal colTotal\"\n                style = if h.children.length then style + \" pvtColSubtotal\" else style\n                style = style + \" col\"+h.row+\" colcol\"+h.col\n                td = createCell(\"td\", style, totalAggregator.format(val), {\"data-value\": val, \"data-for\": \"col\"+h.col})\n                tr.appendChild td\n\n        buildGrandTotal = (result, tr) ->\n            totalAggregator = allTotal\n            val = totalAggregator.value()\n            td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\"data-value\": val})\n            tr.appendChild td\n            result.appendChild tr\n\n        setColVisibility = (visibility, h) ->\n            h.th.style.display = visibility\n            if h.children.length\n                $(h.th).closest('table.pvtTable').find('tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col).css('display', visibility)\n            else\n                $(h.th).closest('table.pvtTable').find('tbody tr td.pvtVal.col' + h.row).not('.pvtColSubtotal').css('display', visibility)\n            if h.sTh\n                h.sTh.style.display = visibility\n\n        collapseCol = (colHeaderHeaders, colHeaderCols, c) ->\n            if not colHeaderCols[c]\n                return\n            h = colHeaderCols[c]\n            if h.clickStatus is \"collapsed\"\n                return\n            colspan = 0\n            for i in [1..h.descendants] when h.descendants != 0\n                d = colHeaderCols[c-i]\n                if d.th.style.display isnt \"none\"\n                    ++colspan\n                    setColVisibility \"none\", d\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\"))-colspan)\n                p = p.parent\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\")\n            h.clickStatus = \"collapsed\"\n            h.th.setAttribute(\"colspan\", 1)\n            h.th.style.display = \"\"\n            colHeaderHeader = colHeaderHeaders[h.col]\n            colHeaderHeader.expandedCount--\n            if colHeaderHeader.expandedCount == 0\n                for i in [h.col..colHeaderHeaders.length-2]\n                    colHeaderHeader = colHeaderHeaders[i]\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute(\"data-colAttr\")\n                    colHeaderHeader.clickStatus = \"collapsed\"\n\n        expandChildCol = (ch) ->\n            if ch.th.style.display is \"none\"\n                setColVisibility \"\", ch\n            if ch.clickStatus isnt \"collapsed\"\n                for gch in ch.children\n                    expandChildCol gch\n\n        expandCol = (colHeaderHeaders, colHeaderCols, c) ->\n            if not colHeaderCols[c]\n                return\n            h = colHeaderCols[c]\n            if h.clickStatus is \"expanded\"\n                return\n            colspan = 0\n            for ch in h.children\n                colspan = colspan + ch.th.colSpan\n                if ch.th.style.display is \"none\"\n                    setColVisibility \"\", ch\n                expandChildCol ch\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\")\n            h.th.setAttribute(\"colspan\", colspan+1)\n            h.clickStatus = \"expanded\"\n            h.th.style.display = \"\"\n            if h.sTh\n                h.sTh.style.display = \"\"\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"colspan\", (colspan + parseInt(p.th.getAttribute(\"colspan\"))))\n                p = p.parent\n            hh = colHeaderHeaders[h.col]\n            ++hh.expandedCount\n            if hh.expandedCount == hh.nHeaders\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-colAttr\")\n                hh.clickStatus = \"expanded\"\n\n        collapseRow = (rowHeaderHeaders, rowHeaderRows, r) ->\n            if not rowHeaderRows[r]\n                return\n            h = rowHeaderRows[r]\n            if h.clickStatus is \"collapsed\"\n                return\n            rowspan = 0\n            for i in [1..h.descendants] when h.descendants != 0\n                d = rowHeaderRows[r+i]\n                if d.tr.style.display isnt \"none\"\n                    ++rowspan\n                    d.tr.style.display = \"none\"\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\"))-rowspan)\n                p = p.parent\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\")\n            h.clickStatus = \"collapsed\"\n            h.th.setAttribute(\"rowspan\", 1)\n            h.tr.style.display = \"\"\n            rowHeaderHeader = rowHeaderHeaders.hh[h.col]\n            rowHeaderHeader.expandedCount--\n            if rowHeaderHeader.expandedCount == 0\n                for j in [h.col..rowHeaderHeaders.hh.length-2]\n                    rowHeaderHeader = rowHeaderHeaders.hh[j]\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute(\"data-rowAttr\")\n                    rowHeaderHeader.clickStatus = \"collapsed\"\n\n        expandChildRow = (ch) ->\n            if ch.tr.style.display is \"none\"\n                ch.tr.style.display = \"\"\n            if ch.clickStatus isnt \"collapsed\"\n                for gch in ch.children\n                    expandChildRow gch\n\n        expandRow = (rowHeaderHeaders, rowHeaderRows, r) ->\n            if not rowHeaderRows[r]\n                return\n            h = rowHeaderRows[r]\n            if h.clickStatus is \"expanded\"\n                return\n            rowspan = 0\n            for ch in h.children\n                rowspan = rowspan + ch.th.rowSpan\n                if ch.tr.style.display is \"none\"\n                    ch.tr.style.display = \"\"\n                expandChildRow ch\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\")\n            h.th.setAttribute(\"rowspan\", rowspan+1)\n            h.clickStatus = \"expanded\"\n            h.tr.style.display = \"\"\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"rowspan\", (rowspan + parseInt(p.th.getAttribute(\"rowspan\"))))\n                p = p.parent\n            hh = rowHeaderHeaders.hh[h.col]\n            ++hh.expandedCount\n            if hh.expandedCount == hh.nHeaders\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-rowAttr\")\n                hh.clickStatus = \"expanded\"\n\n        toggleCol = (colHeaderHeaders, colHeaderCols, c) ->\n            if not colHeaderCols[c]\n                return\n            h = colHeaderCols[c]\n            if h.clickStatus is \"collapsed\"\n                expandCol(colHeaderHeaders, colHeaderCols, c)\n            else\n                collapseCol(colHeaderHeaders, colHeaderCols, c)\n            h.th.scrollIntoView\n\n        toggleRow = (rowHeaderHeaders, rowHeaderRows, r) ->\n            if not rowHeaderRows[r]\n                return\n            if rowHeaderRows[r].clickStatus is \"collapsed\"\n                expandRow(rowHeaderHeaders, rowHeaderRows, r)\n            else\n                collapseRow(rowHeaderHeaders, rowHeaderRows, r)\n\n        collapseColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\n            if typeof colAttr is 'string'\n                idx = colAttrs.indexOf(colAttr)\n            else\n                idx = colAttr\n            console.log \"idx = \" + idx\n            if idx < 0 or idx == colAttrs.length-1\n                return\n            i = idx\n            nAttrs = colAttrs.length-1\n            while i < nAttrs\n                hh = colHeaderHeaders[i]\n                hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i]\n                hh.clickStatus = \"collapsed\"\n                ++i\n            i = 0\n            nCols = colHeaderCols.length\n            while i < nCols\n                h = colHeaderCols[i]\n                if h.col is idx and h.clickStatus isnt \"collapsed\" and h.th.style.display isnt \"none\"\n                    collapseCol(colHeaderHeaders, colHeaderCols, parseInt(h.th.getAttribute(\"data-node\")))\n                ++i\n\n        expandColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\n            if typeof colAttr is 'string'\n                idx = colAttrs.indexOf(colAttr)\n            else\n                idx = colAttr\n            if idx < 0 or idx == colAttrs.length-1\n                return\n            for i in [0..idx]\n                hh = colHeaderHeaders[i]\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i]\n                hh.clickStatus = \"expanded\"\n                j = 0\n                nCols = colHeaderCols.length\n                while j < nCols\n                    h = colHeaderCols[j]\n                    if h.col == i\n                        expandCol(colHeaderHeaders, colHeaderCols, j)\n                    ++j\n            ++idx\n            while idx < colAttrs.length-1\n                colHeaderHeader = colHeaderHeaders[idx]\n                if colHeaderHeader.expandedCount == 0\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx]\n                    colHeaderHeader.clickStatus = \"collapsed\"\n                else if colHeaderHeader.expandedCount == colHeaderHeader.nHeaders\n                    colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx]\n                    colHeaderHeader.clickStatus = \"expanded\"\n                ++idx\n\n        collapseRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\n            if typeof rowAttr is 'string'\n                idx = rowAttrs.indexOf(rowAttr)\n            else\n                idx = rowAttr\n            if idx < 0 or idx == rowAttrs.length-1\n                return\n            i = idx\n            nAttrs = rowAttrs.length-1\n            while i < nAttrs\n                h = rowHeaderHeaders.hh[i]\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i]\n                h.clickStatus = \"collapsed\"\n                ++i\n            j = 0\n            nRows = rowHeaderRows.length\n            while j < nRows\n                h = rowHeaderRows[j]\n                if h.col is idx and h.clickStatus isnt \"collapsed\" and h.tr.style.display isnt \"none\"\n                    collapseRow(rowHeaderHeaders, rowHeaderRows, j)\n                    j = j + h.descendants + 1\n                else\n                    ++j\n\n        expandRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\n            if typeof rowAttr is 'string'\n                idx = rowAttrs.indexOf(rowAttr)\n            else\n                idx = rowAttr\n            if idx < 0 or idx == rowAttrs.length-1\n                return\n            for i in [0..idx]\n                hh = rowHeaderHeaders.hh[i]\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i]\n                hh.clickStatus = \"expanded\"\n                j = 0\n                nRows = rowHeaderRows.length\n                while j < nRows\n                    h = rowHeaderRows[j]\n                    if h.col == i\n                        expandRow(rowHeaderHeaders, rowHeaderRows, j)\n                        j = j + h.descendants + 1\n                    else\n                        ++j\n            ++idx\n            while idx < rowAttrs.length-1\n                rowHeaderHeader = rowHeaderHeaders.hh[idx]\n                if rowHeaderHeader.expandedCount == 0\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx]\n                    rowHeaderHeader.clickStatus = \"collapsed\"\n                else if rowHeaderHeader.expandedCount == rowHeaderHeader.nHeaders\n                    rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx]\n                    rowHeaderHeader.clickStatus = \"expanded\"\n                ++idx\n\n        toggleColHeaderHeader = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\n            idx = colAttrs.indexOf(colAttr)\n            h = colHeaderHeaders[idx]\n            if h.clickStatus is \"collapsed\"\n                expandColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\n            else\n                collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\n\n\n        toggleRowHeaderHeader = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\n            idx = rowAttrs.indexOf(rowAttr)\n            th = rowHeaderHeaders.hh[idx]\n            if th.clickStatus is \"collapsed\"\n                expandRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\n            else\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\n\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\n            rowHeaders = []\n            colHeaders = []\n            rowHeaderHeaders = {}\n            rowHeaderRows = []\n            colHeaderHeaders = []\n            colHeaderCols = []\n\n            if rowAttrs.length != 0\n                rowHeaders = processKeys(rowKeys, \"pvtRowLabel\")\n            if colAttrs.length != 0\n                colHeaders = processKeys(colKeys, \"pvtColLabel\")\n            result = document.createElement(\"table\")\n            result.className = \"pvtTable\"\n            result.style.display = \"none\"\n            thead = document.createElement(\"thead\")\n            result.appendChild thead\n            if colAttrs.length != 0\n                buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs)\n                for h in colHeaders\n                   buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\n            if rowAttrs.length != 0\n                buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs)\n                if colAttrs.length == 0\n                    buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs)\n            if colAttrs.length != 0\n                buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs)\n            tbody = document.createElement(\"tbody\")\n            result.appendChild tbody\n            if rowAttrs.length != 0\n                for h in rowHeaders\n                    buildRowHeaders tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs\n                buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\n            buildValues(rowHeaderRows, colHeaderCols)\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\n            if colAttrs.length != 0\n                buildColTotals(tr, colHeaderCols)\n            buildGrandTotal(tbody, tr)\n            result.setAttribute(\"data-numrows\", rowKeys.length)\n            result.setAttribute(\"data-numcols\", colKeys.length)\n            if not opts.collapseRowsAt? and not opts.collapseColsAt?\n                result.style.display = \"\"\n            if opts.collapseRowsAt?\n                setTimeout (->\n                    collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt\n                    if not opts.collapseColsAt\n                        result.style.display = \"\"\n                ), 0\n            if opts.collapseColsAt?\n                setTimeout (->\n                    collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt\n                    result.style.display = \"\"\n                ), 0\n            return result\n\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\n\n    $.pivotUtilities.subtotal_renderers =\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"heatmap\", opts)\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\", opts)\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\", opts)\n","(function() {\n  var callWithJQuery,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var SubtotalPivotData, SubtotalRenderer;\n    SubtotalPivotData = (function(superClass) {\n      var processKey;\n\n      extend(SubtotalPivotData, superClass);\n\n      function SubtotalPivotData(input, opts) {\n        SubtotalPivotData.__super__.constructor.call(this, input, opts);\n      }\n\n      processKey = function(record, totals, keys, attrs, f) {\n        var aPos, addKey, attr, flatKey, k, key, l, len, len1, nAttr, nPos, ref, ref1;\n        key = [];\n        addKey = false;\n        for (k = 0, len = attrs.length; k < len; k++) {\n          attr = attrs[k];\n          if (typeof record[attr] === \"string\") {\n            key.push((ref = record[attr]) != null ? ref : \"null\");\n          } else {\n            nPos = 1;\n            aPos = attrs.indexOf(attr);\n            ref1 = record[attr];\n            for (l = 0, len1 = ref1.length; l < len1; l++) {\n              nAttr = ref1[l];\n              attrs.splice(aPos + (nPos++), 0, nAttr);\n              key.push(record[nAttr]);\n            }\n            if (nPos > 1) {\n              attrs.splice(aPos, 1);\n            }\n          }\n          flatKey = key.join(String.fromCharCode(0));\n          if (!totals[flatKey]) {\n            totals[flatKey] = f(key.slice());\n            addKey = true;\n          }\n          totals[flatKey].push(record);\n        }\n        if (addKey) {\n          keys.push(key);\n        }\n        return [key, attrs];\n      };\n\n      SubtotalPivotData.prototype.processRecord = function(record) {\n        var colKey, fColKey, fRowKey, flatColKey, flatRowKey, i, j, k, m, n, ref, ref1, ref2, results, rowKey;\n        rowKey = [];\n        colKey = [];\n        this.allTotal.push(record);\n        ref = processKey(record, this.rowTotals, this.rowKeys, this.rowAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, key, []);\n          };\n        })(this)), rowKey = ref[0], this.rowAttrs = ref[1];\n        ref1 = processKey(record, this.colTotals, this.colKeys, this.colAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, [], key);\n          };\n        })(this)), colKey = ref1[0], this.colAttrs = ref1[1];\n        m = rowKey.length - 1;\n        n = colKey.length - 1;\n        if (m < 0 || n < 0) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref2 = m; 0 <= ref2 ? k <= ref2 : k >= ref2; i = 0 <= ref2 ? ++k : --k) {\n          fRowKey = rowKey.slice(0, i + 1);\n          flatRowKey = fRowKey.join(String.fromCharCode(0));\n          if (!this.tree[flatRowKey]) {\n            this.tree[flatRowKey] = {};\n          }\n          results.push((function() {\n            var l, ref3, results1;\n            results1 = [];\n            for (j = l = 0, ref3 = n; 0 <= ref3 ? l <= ref3 : l >= ref3; j = 0 <= ref3 ? ++l : --l) {\n              fColKey = colKey.slice(0, j + 1);\n              flatColKey = fColKey.join(String.fromCharCode(0));\n              if (!this.tree[flatRowKey][flatColKey]) {\n                this.tree[flatRowKey][flatColKey] = this.aggregator(this, fRowKey, fColKey);\n              }\n              results1.push(this.tree[flatRowKey][flatColKey].push(record));\n            }\n            return results1;\n          }).call(this));\n        }\n        return results;\n      };\n\n      return SubtotalPivotData;\n\n    })($.pivotUtilities.PivotData);\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData;\n    SubtotalRenderer = function(pivotData, opts) {\n      var allTotal, arrowCollapsed, arrowExpanded, buildColHeaderHeader, buildColHeaderHeaders, buildColHeaderHeadersClickEvents, buildColHeaders, buildColTotals, buildColTotalsHeader, buildGrandTotal, buildRowHeaderHeaders, buildRowHeaderHeadersClickEvents, buildRowHeaders, buildRowTotalsHeader, buildValues, colAttrs, colKeys, colTotals, collapseCol, collapseColsAt, collapseRow, collapseRowsAt, createCell, defaults, expandChildCol, expandChildRow, expandCol, expandColsAt, expandRow, expandRowsAt, main, processKeys, rowAttrs, rowKeys, rowTotals, setColVisibility, toggleCol, toggleColHeaderHeader, toggleRow, toggleRowHeaderHeader, tree;\n      defaults = {\n        localeStrings: {\n          totals: \"Totals\"\n        }\n      };\n      opts = $.extend(defaults, opts);\n      arrowCollapsed = \"\\u25B6\";\n      arrowExpanded = \"\\u25E2\";\n      colAttrs = pivotData.colAttrs;\n      rowAttrs = pivotData.rowAttrs;\n      rowKeys = pivotData.getRowKeys();\n      colKeys = pivotData.getColKeys();\n      tree = pivotData.tree;\n      rowTotals = pivotData.rowTotals;\n      colTotals = pivotData.colTotals;\n      allTotal = pivotData.allTotal;\n      createCell = function(cellType, className, textContent, attributes) {\n        var attr, th, val;\n        th = document.createElement(cellType);\n        if (className) {\n          th.className = className;\n        }\n        if (textContent !== null && textContent !== void 0) {\n          th.textContent = textContent;\n        }\n        if (attributes) {\n          for (attr in attributes) {\n            if (!hasProp.call(attributes, attr)) continue;\n            val = attributes[attr];\n            th.setAttribute(attr, val);\n          }\n        }\n        return th;\n      };\n      processKeys = function(keysArr, className) {\n        var c, flatKey, header, headers, lastCol, lastRow, node, nodePos, r, rMark, repeats, th, x;\n        lastRow = keysArr.length - 1;\n        lastCol = keysArr[0].length - 1;\n        rMark = [];\n        headers = [];\n        th = createCell(\"th\", className, keysArr[0][0]);\n        flatKey = keysArr[0][0];\n        nodePos = 0;\n        node = {\n          \"node\": nodePos,\n          \"row\": 0,\n          \"col\": 0,\n          \"th\": th,\n          \"parent\": null,\n          \"children\": [],\n          \"descendants\": lastCol,\n          \"leaves\": 1,\n          \"flatKey\": flatKey\n        };\n        headers[0] = node;\n        rMark[0] = node;\n        c = 1;\n        while (c <= lastCol) {\n          th = createCell(\"th\", className, keysArr[0][c]);\n          flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c];\n          ++nodePos;\n          node = {\n            \"node\": nodePos,\n            \"row\": 0,\n            \"col\": c,\n            \"th\": th,\n            \"parent\": rMark[c - 1],\n            \"children\": [],\n            \"descendants\": lastCol - c,\n            \"leaves\": 1,\n            \"flatKey\": flatKey\n          };\n          rMark[c] = node;\n          rMark[c - 1].children.push(node);\n          ++c;\n        }\n        rMark[lastCol].leaves = 0;\n        r = 1;\n        while (r <= lastRow) {\n          repeats = true;\n          flatKey = \"\";\n          c = 0;\n          while (c <= lastCol) {\n            flatKey = c === 0 ? keysArr[r][c] : flatKey + String.fromCharCode(0) + keysArr[r][c];\n            if ((keysArr[r][c] === keysArr[rMark[c].row][c]) && (c !== lastCol) && repeats) {\n              repeats = true;\n              ++c;\n              continue;\n            }\n            th = createCell(\"th\", className, keysArr[r][c]);\n            ++nodePos;\n            header = {\n              \"node\": nodePos,\n              \"row\": r,\n              \"col\": c,\n              \"th\": th,\n              \"parent\": null,\n              \"children\": [],\n              \"descendants\": 0,\n              \"leaves\": 1,\n              \"flatKey\": flatKey\n            };\n            if (c === 0) {\n              headers.push(header);\n            } else {\n              header.parent = rMark[c - 1];\n              rMark[c - 1].children.push(header);\n              x = 0;\n              while (x <= c - 1) {\n                rMark[x].descendants = rMark[x].descendants + 1;\n                ++x;\n              }\n            }\n            rMark[c] = header;\n            repeats = false;\n            ++c;\n          }\n          c = 0;\n          while (c <= lastCol) {\n            rMark[c].leaves = rMark[c].leaves + 1;\n            ++c;\n          }\n          rMark[lastCol].leaves = 0;\n          ++r;\n        }\n        return headers;\n      };\n      buildColHeaderHeader = function(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) {\n        var colAttr, textContent, th;\n        colAttr = colAttrs[col];\n        th = createCell(\"th\", \"pvtAxisLabel\", colAttr);\n        textContent = colAttr;\n        if (col < colAttrs.length - 1) {\n          textContent = \" \" + arrowExpanded + \" \" + colAttr;\n        }\n        th = createCell(\"th\", \"pvtAxisLabel\", textContent);\n        th.setAttribute(\"data-colAttr\", colAttr);\n        tr.appendChild(th);\n        colHeaderHeaders.push({\n          \"tr\": tr,\n          \"th\": th,\n          \"clickStatus\": \"expanded\",\n          \"expandedCount\": 0,\n          \"nHeaders\": 0\n        });\n        return thead.appendChild(tr);\n      };\n      buildColHeaderHeaders = function(thead, colHeaderHeaders, rowAttrs, colAttrs) {\n        var c, k, ref, results, tr;\n        tr = document.createElement(\"tr\");\n        if (rowAttrs.length !== 0) {\n          tr.appendChild(createCell(\"th\", null, null, {\n            \"colspan\": rowAttrs.length,\n            \"rowspan\": colAttrs.length\n          }));\n        }\n        buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0);\n        results = [];\n        for (c = k = 1, ref = colAttrs.length; 1 <= ref ? k <= ref : k >= ref; c = 1 <= ref ? ++k : --k) {\n          if (!(c < colAttrs.length)) {\n            continue;\n          }\n          tr = document.createElement(\"tr\");\n          results.push(buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c));\n        }\n        return results;\n      };\n      buildColHeaderHeadersClickEvents = function(colHeaderHeaders, colHeaderCols, colAttrs) {\n        var colAttr, i, k, ref, results, th;\n        results = [];\n        for (i = k = 0, ref = colAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < colAttrs.length - 1)) {\n            continue;\n          }\n          th = colHeaderHeaders[i].th;\n          colAttr = colAttrs[i];\n          results.push(th.onclick = function(event) {\n            event = event || window.event;\n            return toggleColHeaderHeader(colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\"));\n          });\n        }\n        return results;\n      };\n      buildColHeaders = function(colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) {\n        var h, hh, k, len, ref, rowspan, style, th, tr;\n        ref = colHeader.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n        }\n        hh = colHeaderHeaders[colHeader.col];\n        ++hh.expandedCount;\n        ++hh.nHeaders;\n        tr = hh.tr;\n        th = colHeader.th;\n        th.setAttribute(\"data-colHeader\", th.textContent);\n        if (colHeader.col === colAttrs.length - 1 && rowAttrs.length !== 0) {\n          th.setAttribute(\"rowspan\", 2);\n        }\n        if (colHeader.children.length !== 0) {\n          th.setAttribute(\"colspan\", colHeader.descendants + 1);\n        }\n        th.setAttribute(\"data-node\", colHeaderCols.length);\n        tr.appendChild(th);\n        if (colHeader.children.length !== 0) {\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleCol(colHeaderHeaders, colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          rowspan = colAttrs.length - (colHeader.col + 1) + (rowAttrs.length !== 0 ? 1 : 0);\n          style = \"pvtColLabel col\" + colHeader.row;\n          th = createCell(\"th\", style, '', {\n            \"rowspan\": rowspan\n          });\n          colHeader.children[0].tr.appendChild(th);\n          colHeader.sTh = th;\n        }\n        colHeader.clickStatus = \"expanded\";\n        colHeader.tr = tr;\n        return colHeaderCols.push(colHeader);\n      };\n      buildRowHeaderHeaders = function(thead, rowHeaderHeaders, rowAttrs, colAttrs) {\n        var i, rowAttr, textContent, th, tr;\n        tr = document.createElement(\"tr\");\n        rowHeaderHeaders.hh = [];\n        for (i in rowAttrs) {\n          if (!hasProp.call(rowAttrs, i)) continue;\n          rowAttr = rowAttrs[i];\n          textContent = rowAttr;\n          if (i < rowAttrs.length - 1) {\n            textContent = \" \" + arrowExpanded + \" \" + rowAttr;\n          }\n          th = createCell(\"th\", \"pvtAxisLabel\", textContent);\n          th.setAttribute(\"data-rowAttr\", rowAttr);\n          tr.appendChild(th);\n          rowHeaderHeaders.hh.push({\n            \"th\": th,\n            \"clickStatus\": \"expanded\",\n            \"expandedCount\": 0,\n            \"nHeaders\": 0\n          });\n        }\n        if (colAttrs.length !== 0) {\n          th = createCell(\"th\");\n          tr.appendChild(th);\n        }\n        thead.appendChild(tr);\n        return rowHeaderHeaders.tr = tr;\n      };\n      buildRowHeaderHeadersClickEvents = function(rowHeaderHeaders, rowHeaderRows, rowAttrs) {\n        var i, k, ref, results, rowAttr, th;\n        results = [];\n        for (i = k = 0, ref = rowAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < rowAttrs.length - 1)) {\n            continue;\n          }\n          th = rowHeaderHeaders.hh[i];\n          rowAttr = rowAttrs[i];\n          results.push(th.th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRowHeaderHeader(rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\"));\n          });\n        }\n        return results;\n      };\n      buildRowTotalsHeader = function(tr, rowAttrs, colAttrs) {\n        var rowspan, th;\n        rowspan = 1;\n        if (colAttrs.length !== 0) {\n          rowspan = colAttrs.length + (rowAttrs.length === 0 ? 0 : 1);\n        }\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"rowspan\": rowspan\n        });\n        return tr.appendChild(th);\n      };\n      buildRowHeaders = function(tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) {\n        var colspan, h, hh, k, len, ref, results, th, tr;\n        hh = rowHeaderHeaders.hh[rowHeader.col];\n        ++hh.expandedCount;\n        ++hh.nHeaders;\n        tr = document.createElement(\"tr\");\n        th = rowHeader.th;\n        th.setAttribute(\"rowspan\", rowHeader.descendants + 1);\n        th.setAttribute(\"data-rowHeader\", th.textContent);\n        if (rowHeader.col === rowAttrs.length - 1 && colAttrs.length !== 0) {\n          th.setAttribute(\"colspan\", 2);\n        }\n        th.setAttribute(\"data-node\", rowHeaderRows.length);\n        tr.appendChild(th);\n        if (rowHeader.children.length !== 0) {\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRow(rowHeaderHeaders, rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          colspan = rowAttrs.length - (rowHeader.col + 1) + (colAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtRowLabel\", '', {\n            \"colspan\": colspan\n          });\n          tr.appendChild(th);\n        }\n        rowHeader.clickStatus = \"expanded\";\n        rowHeader.tr = tr;\n        rowHeaderRows.push(rowHeader);\n        tbody.appendChild(tr);\n        ref = rowHeader.children;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          results.push(buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs));\n        }\n        return results;\n      };\n      buildValues = function(rowHeaderRows, colHeaderCols) {\n        var aggregator, colHeader, flatColKey, flatRowKey, k, l, len, len1, ref, results, rowHeader, style, td, totalAggregator, tr, val;\n        results = [];\n        for (k = 0, len = rowHeaderRows.length; k < len; k++) {\n          rowHeader = rowHeaderRows[k];\n          tr = rowHeader.tr;\n          flatRowKey = rowHeader.flatKey;\n          for (l = 0, len1 = colHeaderCols.length; l < len1; l++) {\n            colHeader = colHeaderCols[l];\n            flatColKey = colHeader.flatKey;\n            aggregator = (ref = tree[flatRowKey][flatColKey]) != null ? ref : {\n              value: (function() {\n                return null;\n              }),\n              format: function() {\n                return \"\";\n              }\n            };\n            val = aggregator.value();\n            style = \"pvtVal\";\n            style = colHeader.children.length !== 0 ? style + \" pvtColSubtotal\" : style;\n            style = rowHeader.children.length !== 0 ? style + \" pvtRowSubtotal\" : style;\n            style = style + \" row\" + rowHeader.row + \" col\" + colHeader.row + \" rowcol\" + rowHeader.col + \" colcol\" + colHeader.col;\n            td = createCell(\"td\", style, aggregator.format(val), {\n              \"data-value\": val\n            });\n            tr.appendChild(td);\n          }\n          totalAggregator = rowTotals[flatRowKey];\n          val = totalAggregator.value();\n          style = \"pvtTotal rowTotal\";\n          style = rowHeader.children.length !== 0 ? style + \" pvtRowSubtotal\" : style;\n          style = style + \" row\" + rowHeader.row + \" rowcol\" + rowHeader.col;\n          td = createCell(\"td\", style, totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-row\": \"row\" + rowHeader.row,\n            \"data-col\": \"col\" + rowHeader.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildColTotalsHeader = function(rowAttrs, colAttrs) {\n        var colspan, th, tr;\n        tr = document.createElement(\"tr\");\n        colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"colspan\": colspan\n        });\n        tr.appendChild(th);\n        return tr;\n      };\n      buildColTotals = function(tr, colHeaderCols) {\n        var h, k, len, results, style, td, totalAggregator, val;\n        results = [];\n        for (k = 0, len = colHeaderCols.length; k < len; k++) {\n          h = colHeaderCols[k];\n          totalAggregator = colTotals[h.flatKey];\n          val = totalAggregator.value();\n          style = \"pvtVal pvtTotal colTotal\";\n          style = h.children.length ? style + \" pvtColSubtotal\" : style;\n          style = style + \" col\" + h.row + \" colcol\" + h.col;\n          td = createCell(\"td\", style, totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-for\": \"col\" + h.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildGrandTotal = function(result, tr) {\n        var td, totalAggregator, val;\n        totalAggregator = allTotal;\n        val = totalAggregator.value();\n        td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\n          \"data-value\": val\n        });\n        tr.appendChild(td);\n        return result.appendChild(tr);\n      };\n      setColVisibility = function(visibility, h) {\n        h.th.style.display = visibility;\n        if (h.children.length) {\n          $(h.th).closest('table.pvtTable').find('tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col).css('display', visibility);\n        } else {\n          $(h.th).closest('table.pvtTable').find('tbody tr td.pvtVal.col' + h.row).not('.pvtColSubtotal').css('display', visibility);\n        }\n        if (h.sTh) {\n          return h.sTh.style.display = visibility;\n        }\n      };\n      collapseCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var colHeaderHeader, colspan, d, h, i, k, l, p, ref, ref1, ref2, results;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === \"collapsed\") {\n          return;\n        }\n        colspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = colHeaderCols[c - i];\n          if (d.th.style.display !== \"none\") {\n            ++colspan;\n            setColVisibility(\"none\", d);\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\")) - colspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.clickStatus = \"collapsed\";\n        h.th.setAttribute(\"colspan\", 1);\n        h.th.style.display = \"\";\n        colHeaderHeader = colHeaderHeaders[h.col];\n        colHeaderHeader.expandedCount--;\n        if (colHeaderHeader.expandedCount === 0) {\n          results = [];\n          for (i = l = ref1 = h.col, ref2 = colHeaderHeaders.length - 2; ref1 <= ref2 ? l <= ref2 : l >= ref2; i = ref1 <= ref2 ? ++l : --l) {\n            colHeaderHeader = colHeaderHeaders[i];\n            colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute(\"data-colAttr\");\n            results.push(colHeaderHeader.clickStatus = \"collapsed\");\n          }\n          return results;\n        }\n      };\n      expandChildCol = function(ch) {\n        var gch, k, len, ref, results;\n        if (ch.th.style.display === \"none\") {\n          setColVisibility(\"\", ch);\n        }\n        if (ch.clickStatus !== \"collapsed\") {\n          ref = ch.children;\n          results = [];\n          for (k = 0, len = ref.length; k < len; k++) {\n            gch = ref[k];\n            results.push(expandChildCol(gch));\n          }\n          return results;\n        }\n      };\n      expandCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var ch, colspan, h, hh, k, len, p, ref;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === \"expanded\") {\n          return;\n        }\n        colspan = 0;\n        ref = h.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          ch = ref[k];\n          colspan = colspan + ch.th.colSpan;\n          if (ch.th.style.display === \"none\") {\n            setColVisibility(\"\", ch);\n          }\n          expandChildCol(ch);\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.th.setAttribute(\"colspan\", colspan + 1);\n        h.clickStatus = \"expanded\";\n        h.th.style.display = \"\";\n        if (h.sTh) {\n          h.sTh.style.display = \"\";\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", colspan + parseInt(p.th.getAttribute(\"colspan\")));\n          p = p.parent;\n        }\n        hh = colHeaderHeaders[h.col];\n        ++hh.expandedCount;\n        if (hh.expandedCount === hh.nHeaders) {\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-colAttr\");\n          return hh.clickStatus = \"expanded\";\n        }\n      };\n      collapseRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        var d, h, i, j, k, l, p, ref, ref1, ref2, results, rowHeaderHeader, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === \"collapsed\") {\n          return;\n        }\n        rowspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.tr.style.display !== \"none\") {\n            ++rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\")) - rowspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.clickStatus = \"collapsed\";\n        h.th.setAttribute(\"rowspan\", 1);\n        h.tr.style.display = \"\";\n        rowHeaderHeader = rowHeaderHeaders.hh[h.col];\n        rowHeaderHeader.expandedCount--;\n        if (rowHeaderHeader.expandedCount === 0) {\n          results = [];\n          for (j = l = ref1 = h.col, ref2 = rowHeaderHeaders.hh.length - 2; ref1 <= ref2 ? l <= ref2 : l >= ref2; j = ref1 <= ref2 ? ++l : --l) {\n            rowHeaderHeader = rowHeaderHeaders.hh[j];\n            rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute(\"data-rowAttr\");\n            results.push(rowHeaderHeader.clickStatus = \"collapsed\");\n          }\n          return results;\n        }\n      };\n      expandChildRow = function(ch) {\n        var gch, k, len, ref, results;\n        if (ch.tr.style.display === \"none\") {\n          ch.tr.style.display = \"\";\n        }\n        if (ch.clickStatus !== \"collapsed\") {\n          ref = ch.children;\n          results = [];\n          for (k = 0, len = ref.length; k < len; k++) {\n            gch = ref[k];\n            results.push(expandChildRow(gch));\n          }\n          return results;\n        }\n      };\n      expandRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        var ch, h, hh, k, len, p, ref, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === \"expanded\") {\n          return;\n        }\n        rowspan = 0;\n        ref = h.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          ch = ref[k];\n          rowspan = rowspan + ch.th.rowSpan;\n          if (ch.tr.style.display === \"none\") {\n            ch.tr.style.display = \"\";\n          }\n          expandChildRow(ch);\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.th.setAttribute(\"rowspan\", rowspan + 1);\n        h.clickStatus = \"expanded\";\n        h.tr.style.display = \"\";\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", rowspan + parseInt(p.th.getAttribute(\"rowspan\")));\n          p = p.parent;\n        }\n        hh = rowHeaderHeaders.hh[h.col];\n        ++hh.expandedCount;\n        if (hh.expandedCount === hh.nHeaders) {\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-rowAttr\");\n          return hh.clickStatus = \"expanded\";\n        }\n      };\n      toggleCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var h;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === \"collapsed\") {\n          expandCol(colHeaderHeaders, colHeaderCols, c);\n        } else {\n          collapseCol(colHeaderHeaders, colHeaderCols, c);\n        }\n        return h.th.scrollIntoView;\n      };\n      toggleRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        if (rowHeaderRows[r].clickStatus === \"collapsed\") {\n          return expandRow(rowHeaderHeaders, rowHeaderRows, r);\n        } else {\n          return collapseRow(rowHeaderHeaders, rowHeaderRows, r);\n        }\n      };\n      collapseColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, hh, i, idx, nAttrs, nCols, results;\n        if (typeof colAttr === 'string') {\n          idx = colAttrs.indexOf(colAttr);\n        } else {\n          idx = colAttr;\n        }\n        console.log(\"idx = \" + idx);\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = colAttrs.length - 1;\n        while (i < nAttrs) {\n          hh = colHeaderHeaders[i];\n          hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i];\n          hh.clickStatus = \"collapsed\";\n          ++i;\n        }\n        i = 0;\n        nCols = colHeaderCols.length;\n        results = [];\n        while (i < nCols) {\n          h = colHeaderCols[i];\n          if (h.col === idx && h.clickStatus !== \"collapsed\" && h.th.style.display !== \"none\") {\n            collapseCol(colHeaderHeaders, colHeaderCols, parseInt(h.th.getAttribute(\"data-node\")));\n          }\n          results.push(++i);\n        }\n        return results;\n      };\n      expandColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var colHeaderHeader, h, hh, i, idx, j, k, nCols, ref, results;\n        if (typeof colAttr === 'string') {\n          idx = colAttrs.indexOf(colAttr);\n        } else {\n          idx = colAttr;\n        }\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          hh = colHeaderHeaders[i];\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i];\n          hh.clickStatus = \"expanded\";\n          j = 0;\n          nCols = colHeaderCols.length;\n          while (j < nCols) {\n            h = colHeaderCols[j];\n            if (h.col === i) {\n              expandCol(colHeaderHeaders, colHeaderCols, j);\n            }\n            ++j;\n          }\n        }\n        ++idx;\n        results = [];\n        while (idx < colAttrs.length - 1) {\n          colHeaderHeader = colHeaderHeaders[idx];\n          if (colHeaderHeader.expandedCount === 0) {\n            colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx];\n            colHeaderHeader.clickStatus = \"collapsed\";\n          } else if (colHeaderHeader.expandedCount === colHeaderHeader.nHeaders) {\n            colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx];\n            colHeaderHeader.clickStatus = \"expanded\";\n          }\n          results.push(++idx);\n        }\n        return results;\n      };\n      collapseRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, i, idx, j, nAttrs, nRows, results;\n        if (typeof rowAttr === 'string') {\n          idx = rowAttrs.indexOf(rowAttr);\n        } else {\n          idx = rowAttr;\n        }\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = rowAttrs.length - 1;\n        while (i < nAttrs) {\n          h = rowHeaderHeaders.hh[i];\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i];\n          h.clickStatus = \"collapsed\";\n          ++i;\n        }\n        j = 0;\n        nRows = rowHeaderRows.length;\n        results = [];\n        while (j < nRows) {\n          h = rowHeaderRows[j];\n          if (h.col === idx && h.clickStatus !== \"collapsed\" && h.tr.style.display !== \"none\") {\n            collapseRow(rowHeaderHeaders, rowHeaderRows, j);\n            results.push(j = j + h.descendants + 1);\n          } else {\n            results.push(++j);\n          }\n        }\n        return results;\n      };\n      expandRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, hh, i, idx, j, k, nRows, ref, results, rowHeaderHeader;\n        if (typeof rowAttr === 'string') {\n          idx = rowAttrs.indexOf(rowAttr);\n        } else {\n          idx = rowAttr;\n        }\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          hh = rowHeaderHeaders.hh[i];\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i];\n          hh.clickStatus = \"expanded\";\n          j = 0;\n          nRows = rowHeaderRows.length;\n          while (j < nRows) {\n            h = rowHeaderRows[j];\n            if (h.col === i) {\n              expandRow(rowHeaderHeaders, rowHeaderRows, j);\n              j = j + h.descendants + 1;\n            } else {\n              ++j;\n            }\n          }\n        }\n        ++idx;\n        results = [];\n        while (idx < rowAttrs.length - 1) {\n          rowHeaderHeader = rowHeaderHeaders.hh[idx];\n          if (rowHeaderHeader.expandedCount === 0) {\n            rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx];\n            rowHeaderHeader.clickStatus = \"collapsed\";\n          } else if (rowHeaderHeader.expandedCount === rowHeaderHeader.nHeaders) {\n            rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx];\n            rowHeaderHeader.clickStatus = \"expanded\";\n          }\n          results.push(++idx);\n        }\n        return results;\n      };\n      toggleColHeaderHeader = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, idx;\n        idx = colAttrs.indexOf(colAttr);\n        h = colHeaderHeaders[idx];\n        if (h.clickStatus === \"collapsed\") {\n          return expandColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        } else {\n          return collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        }\n      };\n      toggleRowHeaderHeader = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var idx, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        th = rowHeaderHeaders.hh[idx];\n        if (th.clickStatus === \"collapsed\") {\n          return expandRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        } else {\n          return collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        }\n      };\n      main = function(rowAttrs, rowKeys, colAttrs, colKeys) {\n        var colHeaderCols, colHeaderHeaders, colHeaders, h, k, l, len, len1, result, rowHeaderHeaders, rowHeaderRows, rowHeaders, tbody, thead, tr;\n        rowHeaders = [];\n        colHeaders = [];\n        rowHeaderHeaders = {};\n        rowHeaderRows = [];\n        colHeaderHeaders = [];\n        colHeaderCols = [];\n        if (rowAttrs.length !== 0) {\n          rowHeaders = processKeys(rowKeys, \"pvtRowLabel\");\n        }\n        if (colAttrs.length !== 0) {\n          colHeaders = processKeys(colKeys, \"pvtColLabel\");\n        }\n        result = document.createElement(\"table\");\n        result.className = \"pvtTable\";\n        result.style.display = \"none\";\n        thead = document.createElement(\"thead\");\n        result.appendChild(thead);\n        if (colAttrs.length !== 0) {\n          buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs);\n          for (k = 0, len = colHeaders.length; k < len; k++) {\n            h = colHeaders[k];\n            buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n          }\n          buildColHeaderHeadersClickEvents(colHeaderHeaders, colHeaderCols, colAttrs);\n        }\n        if (rowAttrs.length !== 0) {\n          buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs);\n          if (colAttrs.length === 0) {\n            buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs);\n          }\n        }\n        if (colAttrs.length !== 0) {\n          buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs);\n        }\n        tbody = document.createElement(\"tbody\");\n        result.appendChild(tbody);\n        if (rowAttrs.length !== 0) {\n          for (l = 0, len1 = rowHeaders.length; l < len1; l++) {\n            h = rowHeaders[l];\n            buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs);\n          }\n          buildRowHeaderHeadersClickEvents(rowHeaderHeaders, rowHeaderRows, rowAttrs);\n        }\n        buildValues(rowHeaderRows, colHeaderCols);\n        tr = buildColTotalsHeader(rowAttrs, colAttrs);\n        if (colAttrs.length !== 0) {\n          buildColTotals(tr, colHeaderCols);\n        }\n        buildGrandTotal(tbody, tr);\n        result.setAttribute(\"data-numrows\", rowKeys.length);\n        result.setAttribute(\"data-numcols\", colKeys.length);\n        if ((opts.collapseRowsAt == null) && (opts.collapseColsAt == null)) {\n          result.style.display = \"\";\n        }\n        if (opts.collapseRowsAt != null) {\n          setTimeout((function() {\n            collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt);\n            if (!opts.collapseColsAt) {\n              return result.style.display = \"\";\n            }\n          }), 0);\n        }\n        if (opts.collapseColsAt != null) {\n          setTimeout((function() {\n            collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt);\n            return result.style.display = \"\";\n          }), 0);\n        }\n        return result;\n      };\n      return main(rowAttrs, rowKeys, colAttrs, colKeys);\n    };\n    return $.pivotUtilities.subtotal_renderers = {\n      \"Table With Subtotal\": function(pvtData, opts) {\n        return SubtotalRenderer(pvtData, opts);\n      },\n      \"Table With Subtotal Bar Chart\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).barchart();\n      },\n      \"Table With Subtotal Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"heatmap\", opts);\n      },\n      \"Table With Subtotal Row Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\", opts);\n      },\n      \"Table With Subtotal Col Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\", opts);\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=subtotal.js.map\n"]}